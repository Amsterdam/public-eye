# http
server {
	listen    80;

	# UI - frontend as dev build
	location / {
		#proxy_pass  http://127.0.0.1:3000/;
		index index.html;

		root /var/www/eagle_eye;

		try_files $uri /index.html;
	}

	# Socket
	location /socket.io/ {
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_pass http://127.0.0.1:3333/socket.io/;
  }

	# Backend
	location /api/ {
		proxy_pass  http://127.0.0.1:3333/;
	}
}

# https
server {
	listen 443 http2 ssl;
	listen [::]:443 http2 ssl;

#	server_name 192.168.;

	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

########################################################################
# from https://cipherli.st/                                            #
# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
########################################################################

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;

##################################
# END https://cipherli.st/ BLOCK #
##################################

	# UI - frontend as dev build
	location / {
		#proxy_pass  http://127.0.0.1:3000/;
		index index.html;

		root /var/www/eagle_eye;

		try_files $uri /index.html;
	}

	# Socket
	location /socket.io/ {
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_pass http://127.0.0.1:3333/socket.io/;
	}

	# Backend
	location /api/ {
		proxy_pass  http://127.0.0.1:3333/;
	}
}
